plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
}

group = 'kr.co'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    // mail 설정
    implementation 'org.springframework.boot:spring-boot-starter-mail:3.3.4'
    // mail 설정 끝
//    implementation 'org.postgresql:postgresql'
    // Redis 설정
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    // Redis 설정 끝
    // JWT 의존성 추가
    implementation 'io.jsonwebtoken:jjwt-jackson:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-impl:0.12.3'
    implementation 'io.jsonwebtoken:jjwt-api:0.12.3'
    // JWT 의존성 추가 끝
    // querydsl 추가
    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    // querydsl 끝
    // querydsl 로그 보기
    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    // querydsl 로그 보기 끝
    // oracle cloud object storage
    implementation 'com.oracle.cloud.spring:spring-cloud-oci-storage:1.3.1'
    // oracle cloud object storage 끝
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

// querydsl QClass 파일 생성 위치 지정
def generated = 'src/main/generated'

tasks.withType(JavaCompile).configureEach {
    options.getGeneratedSourceOutputDirectory().set(file(generated))
}

// gradle clean 시에 QClass 디렉토리 삭제
clean{
    delete file(generated)
}